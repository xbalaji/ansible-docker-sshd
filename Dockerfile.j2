
#
# File created by {{ author }} ({{ email }})
{%- set dfile = outfile|default('Dockerfile') %}
#
#
# auto generated by j2
#   j2 Dockerfile.j2 Dockerfile.yml -o {{ dfile }}
#
# build command
#   docker build --rm -f <{{ dfile }}> -t {{ target }} .
#   docker build --rm -t {{ target }} .
#
# run command
#   docker run --name {{ eg_container }} -d -t {{ target }}
#
# inspect to find ip address
#   docker inspect -f  {%- raw %} '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'  {%- endraw %} {{ eg_container }}
#
# exec to go inside
#   docker exec -i -t {{ eg_container }} /bin/bash
#
# now ssh to the above ip address
#
# remove, delete
#   docker stop {{ eg_container }}
#   docker rm   {{ eg_container }}
#   docker rmi  {{ target }}
#

################## start: {{ dfile }}  ###################

FROM {{ image }}:{{ version }}

{%- for label in labels %}
  {%- for key, value in label.items() %}
LABEL {{key}}="{{value}}"
  {%- endfor %}
{%- endfor %}

RUN mkdir /var/run/sshd
RUN apt-get -y update && apt-get -y upgrade && apt-get install -y openssh-server

{#- set the root password #}
{%- if root_password is defined %}
RUN echo 'root:{{root_password}}' | chpasswd 
{%- endif %}

{%- if root_ssh is defined %}
# permit root ssh login 
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile
{%- endif %}

# add other logins
{%- for user in users %}
RUN useradd -m -s /bin/bash {{user.id}} && \
    usermod -aG sudo {{ user.id }} && \
    echo '{{ user.id }}:{{ user.pass }}' | chpasswd
{%- endfor %}

EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]

# ################## end: {{ dfile }} ###################

